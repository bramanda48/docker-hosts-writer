name: Publish Release

env:
  DOTNET_VERSION: "6.0.x"

on:
  workflow_dispatch:
    inputs:
      vendor_version:
          type: string
          description: "Vendor Version (semver) for the release -- what will be visible."
          default: "1.0.0"
          required: true

permissions:
  contents: write

jobs:
  create_release_tag:
    name: "Create release tag"
    environment: "Production"
    runs-on: ubuntu-latest
    env:
        PL_VENDOR_VERSION: ${{ github.event.inputs.vendor_version || '1.0.0' }}
    outputs:
      semantic: ${{ steps.semantic.outputs }}
    steps:
      - uses: actions/checkout@v3
      - uses: codfish/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branches: |
            [
              {
                name: "master",
                prerelease: true
              }
            ]
          tag-format: "v${{ env.PL_VENDOR_VERSION }}"

  release:
    name: "Release apps"
    environment: "Production"
    strategy:
      fail-fast: false
      matrix:
          platform: [ubuntu-latest, windows-2022]
    runs-on: ${{ matrix.platform }}
    needs: create_release_tag
    env:
      PL_VENDOR_VERSION: ${{ github.event.inputs.vendor_version || '1.0.0' }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build release
        run: dotnet build --configuration Release
      - name: Publish application
        if: matrix.platform == 'windows-2022'
        run: |
          dotnet publish \
            -c Release \
            -r win-x64 \
            -p:PublishReadyToRun=true \
            -p:PublishSingleFile=true \
            -p:Version=${{ env.PL_VENDOR_VERSION }} \
            -p:AssemblyVersion=${{ env.PL_VENDOR_VERSION }}.${{ github.run_id }} \
            --self-contained true
      - name: Publish application
        if: matrix.platform == 'ubuntu-latest'
        run: |
          dotnet publish \
            -c Release \
            -r linux-x64 \
            -p:PublishReadyToRun=true \
            -p:PublishSingleFile=true \
            -p:Version=${{ env.PL_VENDOR_VERSION }} \
            -p:AssemblyVersion=${{ env.PL_VENDOR_VERSION }}.${{ github.run_id }} \
            --self-contained true
      - name: Upload windows executable
        if: matrix.platform == 'windows-2022'
        uses: svenstaro/upload-release-action@2.2.1
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            tag: "v${{ env.PL_VENDOR_VERSION }}"
            file: bin/Release/net6.0/win-x64/publish/docker-hosts-writer.exe
            asset_name: docker-host-writer-${{ env.PL_VENDOR_VERSION }}-windows.exe
            prerelease: true
      - name: Upload linux executable
        if: matrix.platform == 'ubuntu-latest'
        uses: svenstaro/upload-release-action@2.2.1
        with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            tag: "v${{ env.PL_VENDOR_VERSION }}"
            file: bin/Release/net6.0/linux-x64/publish/docker-hosts-writer
            asset_name: docker-host-writer-${{ env.PL_VENDOR_VERSION }}-linux
            prerelease: true